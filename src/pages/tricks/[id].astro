---
import SelectCategory from '@/modules/collections/components/SaveInCollectionButton';
import TrickCard from '@/modules/tricks/components/TrickCard.astro';
import Layout from '@/modules/layouts/components/Layout.astro';
import TrickProvider from '@/modules/tricks/provider';
import AvatarGroup from '@/modules/creators/components/AvatarGroup.astro';
import Avatar from '@/modules/creators/components/Avatar.astro';
import CollectionHandler from '@/modules/collections/components/CollectionHandler.astro';

export async function getStaticPaths() {
  const trickProvider = new TrickProvider();

  const { data: tricks } = await trickProvider.getTricks({
    edges: { creators: true, videos: true, prerequisites: true },
  });

  return tricks?.map((trick) => ({
    params: { id: trick.id },
    props: { trick },
  }));
}

const { trick } = Astro.props;
---

<Layout title={trick.name}>
  <CollectionHandler trickIds={[trick.id]} />
  <main class='grid grid-cols-1 lg:grid-cols-[3fr_1fr] p-4 md:p-8 lg:p-10'>
    <div class='@md:ml-52'>
      <h1 class='text-3xl mb-4'>{trick.name}</h1>
      <div class='flex items-center gap-4 mb-4'>
        <AvatarGroup>
          {
            trick.creators?.map((creator) => (
              <Avatar src={creator.picture} name={creator.name} width='w-8' />
            ))
          }
        </AvatarGroup>
        <div>
          {trick.creators?.map((creator) => creator.name).join(', ')}
        </div>
      </div>
      <div class='flex gap-2 flex-wrap mb-6 lg:mb-10'>
        <a
          class='badge badge-primary capitalize p-3'
          href=`/tricks/difficulty/${trick.difficulty}`>{trick.difficulty}</a
        >
        {
          trick.types &&
            trick.types.length > 0 &&
            trick.types.map((type: string) => (
              <div class='badge badge-secondary capitalize p-3'>{type}</div>
            ))
        }
        <SelectCategory trickId={trick.id} client:load />
      </div>
      <div class='lg:hidden mb-10'>
        <h2 class='text-2xl mb-4'>Prerequisites</h2>
        <div class='flex gap-2 flex-col'>
          {
            trick.prerequisites?.map((trick) => (
              <a href={`/tricks/${trick.id}`} class='block'>
                {trick.name}
                <div class='badge badge-secondary ml-2 capitalize'>
                  {trick.difficulty}
                </div>
              </a>
            ))
          }
        </div>
      </div>
      <div class='flex gap-2 flex-col'>
        {
          trick.videos?.map((v) =>
            v.source === 'youtube' ? (
              <div class='relative'>
                <iframe
                  class='w-full max-w-2xl aspect-video rounded-2xl'
                  src={`https://www.youtube.com/embed/${v.externalId}`}
                  allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'
                  allowfullscreen=''
                />
              </div>
            ) : (
              <video controls class='w-full max-w-2xl aspect-video'>
                <source src={v.externalId} />
              </video>
            )
          )
        }
      </div>
    </div>
    <div class='hidden lg:block'>
      <h2 class='text-2xl mb-6'>Prerequisites</h2>
      <div class='flex gap-4 flex-col'>
        {
          trick.prerequisites?.map((trick) => (
            <TrickCard
              preview={trick.preview}
              id={trick.id}
              name={trick.name}
              types={trick.types ?? []}
              creators={trick.creators ?? []}
            />
          ))
        }
      </div>
    </div>
  </main>
</Layout>
