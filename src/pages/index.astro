---
import Main from '@/modules/layouts/components/Main.astro';
import TrickCard from '@/modules/tricks/components/TrickCard.astro';
import Layout from '@/modules/layouts/components/Layout.astro';
import { difficultyLevels } from '@/config';
import { serverClient } from '@/modules/supabase';
import TrickProvider from '@/modules/tricks/provider';

const supabase = serverClient();
const trickProvider = new TrickProvider(supabase);

const data = await Promise.all(
  difficultyLevels.map((difficulty) =>
    trickProvider.getTricks({
      filter: { eq: { key: 'difficulty', value: difficulty } },
      limit: 6,
      count: true,
    })
  )
);

const trickIds = data.flatMap(({ data }) => data).map((trick) => trick.id);
---

<Layout title='PoiTricks'>
  <main
    class='mx-auto max-w-7xl w-full min-h-full p-4 md:p-8 lg:p-10'
    data-trickids={trickIds}
  >
    <!-- <LoadCollection trickIds={data.flat().map(({ id }) => id)} client:only /> -->
    {
      difficultyLevels.map((difficulty, index) => {
        const { data: tricks, count } = data[index];
        return (
          <section class='mb-16'>
            <header class='flex justify-between items-center mb-4'>
              <a
                class='border-transparent border-b hover:border-primary-content pb-1'
                href={`/tricks/difficulty/${difficulty}`}
              >
                <h2 class='text-2xl font-bold capitalize'>
                  {difficulty} ({count})
                </h2>
              </a>
              <a
                class='uppercase border-transparent border-b hover:border-primary-content pb-1'
                href={`/tricks/difficulty/${difficulty}`}
              >
                See all
              </a>
            </header>

            <div class='grid md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-10'>
              {tricks?.map((trick) => (
                <TrickCard
                  preview={trick.preview}
                  id={trick.id}
                  name={trick.name}
                  types={trick.types ?? []}
                />
              ))}
            </div>
          </section>
        );
      })
    }
  </main>
</Layout>

<script>
  import AuthProvider from '@/modules/auth/provider';
  import CollectionProvider from '@/modules/collections/provider';
  import { getTrickIdsFromMain } from '@/modules/tricks/utils';
  import { setCollections } from '@/modules/collections/store';
  import { setCurrentUserId, onUserChange } from '@/modules/user/store';
  import { createComponentClient } from '@/modules/supabase';

  const supabase = createComponentClient();
  const authProvider = new AuthProvider(supabase);

  const trickIds = getTrickIdsFromMain();

  authProvider.onAuthChange(setCurrentUserId);

  onUserChange(async ({ userId }) => {
    if (userId) {
      const collectionProvider = new CollectionProvider(supabase, userId);
      const collections = await collectionProvider.getCollections(trickIds);
      setCollections(collections);
    }
  });
</script>
